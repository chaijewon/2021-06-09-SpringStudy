<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
    <!-- db.properties 읽기 -->
    <util:properties id="db" location="classpath:db.properties"/>
    <!-- Autowired 적용 -->
    <context:annotation-config/>
    <!-- 오라클 정보 전송 -->
    <bean id="ds" class="org.apache.commons.dbcp.BasicDataSource"
      p:driverClassName="#{db['driver']}"
      p:url="#{db['url']}"
      p:username="#{db['username']}"
      p:password="#{db['password']}"
    />
    <!-- mybatis로 전송 
         SqlSessionFactoryBean
          1. 오라클 정보 : getConnection(),disConnection()
             p:dataSource-ref="ds"
          2. PreparedStatement / ResultSet
             =================   ==========
              SQL => mapper-xml    resultType,resultMap
             ==========================================
               Config.xml
    -->
    <bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean"
      p:dataSource-ref="ds"
      p:configLocation="classpath:Config.xml"
    />
    
    <!-- 각 DAO 에서 받는다 -->
    <bean id="gdao" class="com.sist.dao.GenieDAO"
      p:sqlSessionFactory-ref="ssf"
    />
    <bean id="mdao" class="com.sist.dao.MelonDAO"
      p:sqlSessionFactory-ref="ssf"
    />
    <!-- MainClass => Autowired 등록 -->
    <bean id="mc" class="com.sist.main.MainClass"/>
</beans>








